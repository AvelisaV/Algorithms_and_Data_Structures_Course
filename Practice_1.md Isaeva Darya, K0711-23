# Практическая работа 1
# Исаева Дарья, группа К0711-2023



## Задание 1

Дан набор функций: $
n!, 2^n, 2n^2, 5n~log~n, 20n, 10n
$.

Определить при каком значении $n$ $2n^2$ является наиболее эффективной.

Ответ: при n = 1 - нет верного варианта ответа

## Задание 2
Выберете наилучшую асимптотику для $5n+3$:
1. $O(1)$
2. $O(n)$
3. $O(n^2)$
4. $O(n~log~n)$
5. $O(log~n)$ 

Ответ: 1. O(n)

## Задание 3

Найдите ассимптотику в среднем случае для следующего фрагмента кода:

```python
sum = 0
for i in range(0, n * n):
    sum += 1
```

Ответ: n^2

## Задание 4

Определите колчиество операций суммирования и асимптотику.

```python
def task4(values: list, size: int):
    sum = 0
    for i in range(0, size):
        sum += values[i]
    for i in range(0, 20):
        sum += i
    return sum
```
Ответ: n + 20, O(n)

## Задание 5

Определите колчиество операций суммирования и асимптотику.

```python
def task5(values: list, size: int):
    sum = 0
    for i in range(0, size):
        sum += values[i]
        for j in range(0, 20):
            sum += i
    return sum
```
Ответ: 21 sizes, O(n)

## Задание 6

Определите колчиество операций суммирования и асимптотику.

```python
def task6(values: list, size: int):
    sum = 0
    for i in range(0, size):
        sum += values[i]
        for j in range(0, size):
            sum += i
    return sum
```
Ответ: size^2 + size, O(n^2)

## Задание 7

Сравнивая два данных алгоритма, для каких значений $n$ Алгоритм А быстрее?

Алгоритм А | Алгоритм Б
---|---
Сложений: $n^2+n$ | Сложений: $21n$
Сложность: $O(n^2)$| Сложность: $O(n)$

n^2 + n = 21n
n^2 - 20n < 0
n^2 =< 20n
n < 20
Ответ: 0 < n < 20. При значениях n от 1 до 19

## Задание 8

Определите колчиество операций суммирования и асимптотику.

```python
def task8(values: list, size: int):
    sum = 0
    j = 0
    for i in range(0, 1000):  # Количество итераций: 1000, операций суммирования: 1
        sum += i
    for i in range(0, size): # Количество итераций: size,  log2(size)
        j = 1
        while j <= size:
            sum += values[j-1]
            j *= 2
    return sum
```
Ответ: 1000 + size * log2(size), O(size * log2(size)) или O(n * log2n)

## Задание 9

Напишите алгоритм поиска максимального элемента в массиве. Для это алгоритма проверьте его свойства и найдите ассимптотику.
Для написания алгоритма используйте естественный язык, не язык программирования!

Ответ: 1. Присваиваем переменную max значение первого элемента массива; 2. Начиная со второго элемента, проходимся по массиву и сравниваем текущий элемент с последующими. 3. Если последующий элемент больше текущего, то присваиваем его переменной max. 4. Повторяем 2 и 3 шаги до тех пор, пока в массиве не закончатся элементы. 5. В завершении цикла переменная max будет содержать максимальное значение, среди элементов массива.
Свойства: Определенность, конечность
Асимптотика: O(n) - линейная

